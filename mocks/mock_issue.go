// Code generated by MockGen. DO NOT EDIT.
// Source: issue.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIssue is a mock of Issue interface
type MockIssue struct {
	ctrl     *gomock.Controller
	recorder *MockIssueMockRecorder
}

// MockIssueMockRecorder is the mock recorder for MockIssue
type MockIssueMockRecorder struct {
	mock *MockIssue
}

// NewMockIssue creates a new mock instance
func NewMockIssue(ctrl *gomock.Controller) *MockIssue {
	mock := &MockIssue{ctrl: ctrl}
	mock.recorder = &MockIssueMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIssue) EXPECT() *MockIssueMockRecorder {
	return m.recorder
}

// Number mocks base method
func (m *MockIssue) Number() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Number")
	ret0, _ := ret[0].(int)
	return ret0
}

// Number indicates an expected call of Number
func (mr *MockIssueMockRecorder) Number() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Number", reflect.TypeOf((*MockIssue)(nil).Number))
}

// Description mocks base method
func (m *MockIssue) Description() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Description")
	ret0, _ := ret[0].(string)
	return ret0
}

// Description indicates an expected call of Description
func (mr *MockIssueMockRecorder) Description() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Description", reflect.TypeOf((*MockIssue)(nil).Description))
}
